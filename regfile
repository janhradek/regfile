#!/usr/bin/env python3

# v0.1.1:
# - some texts were fixed
# - the progress status has been changed

# TODO:
# - display filename (and group and comment?) differences in check operation
# - unit test register.py - (some input data is needed)
# - verbosity (incremental, 1 - show cfg, 2 - show db ops)
# - guess group and comment for queries (defaults and autovalues)
# - inteligent default and comment, guess everything without (much) instructions

VERSION = 0.1

if __name__ == "__main__":
    import sys
    import argparse

    # process arguments
    pp = argparse.ArgumentParser(description="Register and check files against database.")
    gg = pp.add_mutually_exclusive_group(required=True)
    gg.add_argument("-D", help="make visible defaults file here", dest="op", action="store_const", const="d")
    gg.add_argument("-R", help="register given files", dest="op", action="store_const", const="r")
    gg.add_argument("-C", help="check given files against the register", dest="op", action="store_const", const="c")
    gg.add_argument("-I", help="batch import data from given sumlog.txt files", dest="op", action="store_const", const="i")
    gg.add_argument("-S", help="set details of the registered file given by ID", dest="op", action="store_const", const="s")
    gg.add_argument("-Q", help="query the register", dest = "op", action="store_const", const="q")
    gg.add_argument("-RESETFROMLOG", help="delete the database and restore it from logfile", dest = "op", action="store_const", const="l")
    pp.add_argument("-a", help="don't guess groups and comments automatically (for -R)", dest="auto", action="store_false")
    pp.add_argument("-c", help="comment (for -R -S -Q)", dest="comment")
    gg = pp.add_mutually_exclusive_group(required=False)
    gg.add_argument("-ca", help="commit automatically everything (for -R -I)", dest="commit", action="store_const", const="auto")
    gg.add_argument("-cc", help="confirm every commit (for -R -I)", dest="commit", action="store_const", const="confirm")
    gg.add_argument("-cp", help="confirm only commits with problems (for -R -I)", dest="commit", action="store_const", const="problem")
    pp.add_argument("-d", help="don't read the defaults", dest="defaults", action="store_false")
    pp.add_argument("-g", help="group name (for -R -S -Q)", dest="group")
    pp.add_argument("-i", help="id (for -S -Q)", dest="fileId", metavar="ID")
    gg = pp.add_mutually_exclusive_group(required=False)
    gg.add_argument("-qm", help="query prints mysum format (for -Q)", dest="queryasmysum", action="store_true")
    gg.add_argument("-qa", help="query prints everything (for -Q)", dest="queryverbose", action="store_true")
    gg.add_argument("-qe", help="query prints ed2k links (for -Q)", dest="queryed2k", action="store_true")
    #pp.add_argument("-f", help="input filename(s) to register, check or import", dest="filenames", nargs='+')
    pp.add_argument("filenames", help="input filename(s) (for -R -C -S -I -Q)", nargs='*', default=None)
    args = pp.parse_args()

    #sys.path.append("/home/twider/bin/lib/regfile")

    import register
    register.runop(args)

